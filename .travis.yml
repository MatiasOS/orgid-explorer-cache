language: node_js
notifications:
  email: false
cache:
  directories:
  - "$HOME/.npm"
install: case $TRAVIS_BRANCH in greenkeeper*) npm i;; *) npm ci;; esac;
jobs:
  include:
  - stage: test
    script:
    - npm run lint
    - npm run resolve-swagger-references
    - npm test
    - npm run coverage
  - stage: NPM develop release
    if: branch = develop
    script:
    - npm run resolve-swagger-references
    - npm version preminor --preid="$TRAVIS_COMMIT" --force
    deploy:
      provider: npm
      email: devops@windingtree.com
      skip_cleanup: true
      tag: develop
      api_key: "$NPM_TOKEN"
      on:
        repo: windingtree/orgid-explorer-cache
        branch: develop
  - stage: Build and publish docker image
    sudo: true
    services:
    - docker
    if: tag IS present
    script:
    - npm run resolve-swagger-references
    - docker build -t windingtree/orgid-explorer-cache :$TRAVIS_BRANCH .
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
    - docker push windingtree/orgid-explorer-cache :$TRAVIS_BRANCH
    - docker tag windingtree/orgid-explorer-cache :$TRAVIS_BRANCH windingtree/orgid-explorer-cache:latest
    - docker push windingtree/orgid-explorer-cache :latest
  - stage: NPM release
    if: tag IS present
    script:
    - npm run resolve-swagger-references
    - echo 'Deploying to NPM...'
    deploy:
      provider: npm
      email: devops@windingtree.com
      skip_cleanup: true
      api_key: "$NPM_TOKEN"
      on:
        repo: windingtree/orgid-explorer-cache
        tags: true
  - stage: Start service from docker with latest merged tag
    install: true
    sudo: true
    if: branch = release/production
    script:
    - pip install --user awscli
    - export PATH=$PATH:$HOME/.local/bin
    - npm run deploy-aws-production
env:
  global:
  - secure: TxUF3MCgZYYJGNucEtGkoJ1HWRBwj6vQRH8URk1+F3q3B4nuBplrHUyEiGlUp+jzQtakC/1Vbg6wNWnOBAAODjSzI0ijA21X3Y/HL5XTAw9W49xXp6tbq9MU1SKdVFniAJOSeDcMIUv9fMPfVyY254tHqmt0isW8LkkO6x96O2XwkGouJaFQlVzVxDtshxm2s+qwkKRMSRjLMeBpy6wRFKYX8f3wqMN5yGhKGm/uISzq05OoPE17T7t7gyPdQxes4E0IOiFogpwU1nOuQ6XJT530STda1ZhsnzA86pzrt3n7BhXFodINQqUy7AFRsoz8rAmOvwxLuXgQcrgjrD46EPWTC28hVSM/Y3wg423+X8vn25MFdSbD/lMna96ogNds9PAk5snn44houoTUnqu8iMRnMtI70abOzm+WwWtxqIhG1JbNI4nh/xfUjb4+bliyxDjH+x5u6tus7y+PmOQKbmgqFq23z0n31u5gxvUs35/R+8R1cgI8xNY9+Im5/sghKszS1rUdIx5FHg7FJ00pMZE/V1UmsHMxZ8bxPLcrG6o4dq4msqmJG+83ey+OuRwEdP0KNpNjLBGw+2UQoQoAqSaWNJNY0PcwJ7NEzVYgHsdiTv5jyJCgbs0vlXzMV1NqLVAzVWFy3LhITHg1SM4SdSn9WUyqdsxXWUcTXcVvpFA=
  - secure: R0M3UhCX2OR19u3q9DBHuQPvrSXIN+c2HB5+Bggjn9gezid3b1KMNI/hBva7/Z8N503cjxN4LJk4IiBe6XXlC37QPWkNq5ZP3B1dJ6jPPFCyYyxGy/aVCuxaIRqoYWN6JgubxoHO4QLAE2Y8xJc2swbeR2+wGAOBULVJJozJQzdQiNvWWOS59oJFndi6ACnp7G3/vOaRHSGpq3R/sQo7cyD3PhcBxxNssfCC8qslFbIfwXMJQzW+JF/bzDxSG7AAuivwo2Pg/yrw4soGZsscScsjIZXcZI9TIAmoHoopQVinCNQuQttSH+vbs2sv9/1X5eE62EvUJ54qeeR5RAD8eNEud2I4dUFFewtdMQBAbPkShHIdhXprr9MWNhs90nUhY2qdVrWqhdQffzJnqm2XT3AR4NBBSIlDRaupAm8bPCQiLclfsw2gP4u0OmCjNKrt+FczqrsqSfGg8borVEysC/lPvOlMn7mQ3yosaKcy+7lZyikd1wjIaQtXFP48X+8zsWoUo9+z2Ty/0nhh2qEgu0eJkq7cExpGNKo/5Qn9MmBqqHodTcXtyO8M9xAvs5XUmWXHPMjGYOZHvuRBdfzv1n4pkL7PuB9HpGjjYOa3IW9XG/5OTAsm7/cGGwcLd7+G7QTJwQZeldUoz/yUVDYJlh4ymbPv7ojsm2/OiSQRWP8=
  - secure: CnOwYpFjgUJosP3CZT44JEgWLVZvJ6s+lfNt79izIrvL6smnOwTPN1zlqN1Upnwl8ahzU2gTZQ5XPz28jFvPs2W/lUm0PWWQVq/4fv0FfYPz0XM8Ncg4kDJn2vWK3SosioYp+XhcRDLh9YRu/E09Jz9qvDWk4k6DqAzYBgLmd1wZrJwZNc2OBDO9T0waew8pJ+jxmfcae9pXDCm9pQ26gJyL5S92eLiqVpt5DrHJfyZXNm6oMZOHdClCZflwR1hnQXg9KZE/kYAOCJoW77E4k86oRFayZKnhTle5eqe2GqH+dl6O7uam6GLauF6xDcCmNS59WvZmMhh1Mnd0nJSO3ZXNGVdUo0QkW2EUwbRZKs4ybvHlJyzZdpN+hKLj4eOUD8lM5EEMADc9od9TCVwFu1M/4YpyNMa/Og+gc1YqyB9BHG/J5a1rE0FDfs6K2RHtloTPcwu4k3C3Bgs2jzHhiSGwvxAYFn9XBaB7I9efsGRot/dRQ5nW9sDnIcwQC1UnufmUlagqgU3J0pVGpHcNYuP0W49Qem3/Cxp1nXdTtRows25+ejz6ac1viMJQxS+nR5j+NnyGh/r/FEAyI8wuS2POoSWCX7OoMCpyRJzodudLZsEBhi88SC46E9t1xKwHQl8EFqBHGvjACeopaPpnFgZbZwqR+X5yZXjs+HwKOgg=
