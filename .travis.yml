language: node_js
notifications:
  email: false
cache:
  directories:
  - "$HOME/.npm"
install: case $TRAVIS_BRANCH in greenkeeper*) npm i;; *) npm ci;; esac;
jobs:
  include:
  - stage: test
    script:
    - npm run lint
    - npm run resolve-swagger-references
    - npm test
    - npm run coverage
  - stage: NPM develop release
    if: branch = develop
    script:
    - npm run resolve-swagger-references
    - npm version preminor --preid="$TRAVIS_COMMIT" --force
    deploy:
      provider: npm
      email: devops@windingtree.com
      skip_cleanup: true
      tag: develop
      api_key: "$NPM_TOKEN"
      on:
        repo: windingtree/orgid-explorer-cache
        branch: develop
  - stage: Build and publish docker image
    sudo: true
    services:
    - docker
    if: tag IS present
    script:
    - npm run resolve-swagger-references
    - docker build -t windingtree/orgid-explorer-cache :$TRAVIS_BRANCH .
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
    - docker push windingtree/orgid-explorer-cache :$TRAVIS_BRANCH
    - docker tag windingtree/orgid-explorer-cache :$TRAVIS_BRANCH windingtree/orgid-explorer-cache
      :latest
    - docker push windingtree/orgid-explorer-cache :latest
  - stage: NPM release
    if: tag IS present
    script:
    - npm run resolve-swagger-references
    - echo 'Deploying to NPM...'
    deploy:
      provider: npm
      email: devops@windingtree.com
      skip_cleanup: true
      api_key: "$NPM_TOKEN"
      on:
        repo: windingtree/orgid-explorer-cache
        tags: true
  - stage: Start service from docker with latest merged tag
    install: true
    sudo: true
    if: branch = release/production
    script:
    - pip install --user awscli
    - export PATH=$PATH:$HOME/.local/bin
    - npm run deploy-aws-production
env:
  global:
  - secure: TxUF3MCgZYYJGNucEtGkoJ1HWRBwj6vQRH8URk1+F3q3B4nuBplrHUyEiGlUp+jzQtakC/1Vbg6wNWnOBAAODjSzI0ijA21X3Y/HL5XTAw9W49xXp6tbq9MU1SKdVFniAJOSeDcMIUv9fMPfVyY254tHqmt0isW8LkkO6x96O2XwkGouJaFQlVzVxDtshxm2s+qwkKRMSRjLMeBpy6wRFKYX8f3wqMN5yGhKGm/uISzq05OoPE17T7t7gyPdQxes4E0IOiFogpwU1nOuQ6XJT530STda1ZhsnzA86pzrt3n7BhXFodINQqUy7AFRsoz8rAmOvwxLuXgQcrgjrD46EPWTC28hVSM/Y3wg423+X8vn25MFdSbD/lMna96ogNds9PAk5snn44houoTUnqu8iMRnMtI70abOzm+WwWtxqIhG1JbNI4nh/xfUjb4+bliyxDjH+x5u6tus7y+PmOQKbmgqFq23z0n31u5gxvUs35/R+8R1cgI8xNY9+Im5/sghKszS1rUdIx5FHg7FJ00pMZE/V1UmsHMxZ8bxPLcrG6o4dq4msqmJG+83ey+OuRwEdP0KNpNjLBGw+2UQoQoAqSaWNJNY0PcwJ7NEzVYgHsdiTv5jyJCgbs0vlXzMV1NqLVAzVWFy3LhITHg1SM4SdSn9WUyqdsxXWUcTXcVvpFA=
  - secure: R0M3UhCX2OR19u3q9DBHuQPvrSXIN+c2HB5+Bggjn9gezid3b1KMNI/hBva7/Z8N503cjxN4LJk4IiBe6XXlC37QPWkNq5ZP3B1dJ6jPPFCyYyxGy/aVCuxaIRqoYWN6JgubxoHO4QLAE2Y8xJc2swbeR2+wGAOBULVJJozJQzdQiNvWWOS59oJFndi6ACnp7G3/vOaRHSGpq3R/sQo7cyD3PhcBxxNssfCC8qslFbIfwXMJQzW+JF/bzDxSG7AAuivwo2Pg/yrw4soGZsscScsjIZXcZI9TIAmoHoopQVinCNQuQttSH+vbs2sv9/1X5eE62EvUJ54qeeR5RAD8eNEud2I4dUFFewtdMQBAbPkShHIdhXprr9MWNhs90nUhY2qdVrWqhdQffzJnqm2XT3AR4NBBSIlDRaupAm8bPCQiLclfsw2gP4u0OmCjNKrt+FczqrsqSfGg8borVEysC/lPvOlMn7mQ3yosaKcy+7lZyikd1wjIaQtXFP48X+8zsWoUo9+z2Ty/0nhh2qEgu0eJkq7cExpGNKo/5Qn9MmBqqHodTcXtyO8M9xAvs5XUmWXHPMjGYOZHvuRBdfzv1n4pkL7PuB9HpGjjYOa3IW9XG/5OTAsm7/cGGwcLd7+G7QTJwQZeldUoz/yUVDYJlh4ymbPv7ojsm2/OiSQRWP8=
  - secure: CnOwYpFjgUJosP3CZT44JEgWLVZvJ6s+lfNt79izIrvL6smnOwTPN1zlqN1Upnwl8ahzU2gTZQ5XPz28jFvPs2W/lUm0PWWQVq/4fv0FfYPz0XM8Ncg4kDJn2vWK3SosioYp+XhcRDLh9YRu/E09Jz9qvDWk4k6DqAzYBgLmd1wZrJwZNc2OBDO9T0waew8pJ+jxmfcae9pXDCm9pQ26gJyL5S92eLiqVpt5DrHJfyZXNm6oMZOHdClCZflwR1hnQXg9KZE/kYAOCJoW77E4k86oRFayZKnhTle5eqe2GqH+dl6O7uam6GLauF6xDcCmNS59WvZmMhh1Mnd0nJSO3ZXNGVdUo0QkW2EUwbRZKs4ybvHlJyzZdpN+hKLj4eOUD8lM5EEMADc9od9TCVwFu1M/4YpyNMa/Og+gc1YqyB9BHG/J5a1rE0FDfs6K2RHtloTPcwu4k3C3Bgs2jzHhiSGwvxAYFn9XBaB7I9efsGRot/dRQ5nW9sDnIcwQC1UnufmUlagqgU3J0pVGpHcNYuP0W49Qem3/Cxp1nXdTtRows25+ejz6ac1viMJQxS+nR5j+NnyGh/r/FEAyI8wuS2POoSWCX7OoMCpyRJzodudLZsEBhi88SC46E9t1xKwHQl8EFqBHGvjACeopaPpnFgZbZwqR+X5yZXjs+HwKOgg=
  - secure: pTkkmmSfTKgPe3akqCg31IfIwyvfCTK9AvtziT1dkC+m+1S2rvpURYGkmV7XlOybKcffBgg9NsMCMAdtrySnL3Vz7Pwza+5+XZ0uiLb+6FPHSeI1gQAZXY4mdb1Sg7BkauGW1kpnmW8P8ZLVlL0aZHRP/P+9SR+4TXC0LRqAK7dQJ9att21LtYPaHXzP9ccV1OC0UpNcuxYbBtUvz46bOgz0vsU8R0kh+J2YJOB7zk7oQJ80YBuKWCSSj/Qc+p1IEY+1TXIVENIGLNKu2C9L9tuFB6C1gjJStlR2c0q3t4gXM3eoU5RDEmbzpfdyuFm+kulIjLBtrlreXGwdnMKHOcRKoQO8l4fTd8zjK9axSRVNqOgXubIVRypbblKnJt4r7j1ay5jusCncuzQA7MltzVikuQgXylarU6csK8QK7vcLjmpF//PpOLd1lr7z+oqeG4pMi27XlRI9OY/eqb/AZVSbsZQKvf0NDmm4CHtHfJ8WbM1rNSYaFho8FIZNovwWsRsygy+BoU0/euKl2+MjBz84tToGTpEImr8nTnLNyN+AkbgfZeWQoJnYLJk78lq8qJfOTuEs21xF1kH1pQs5N3iEZ5aT7WdZSFuT6O9SiFw/XS9t2uVgx3rmDH7IFSvOM1bp2hY3VNetgkekTCw9P3NXUZCM9t6Z7JwLEkj3r2k=
  - secure: ZPDR0pxu2fM4n3FrZ5Gp4sy8g7zThqCWftNLIG5DknNp25+UmGHlapk2PwjvENgIuVkzVWiPXTQmzgrA19kiWdnQHCOYaqqJVNKNfoOM5ePRhWpmKl2dlaYDjz5kZV3xOviFi7h84FiaNuIogQ01XghzGMrNKyHu6uCwyPSfN7mpLuxiwI6mSxVoV0g0Un2fvsaCNy9PX4T71nDuA4VPQeRh9ZgvChohdpyxZZRIl1nEG7a5p4o7oTwBC07qakFyjF9SrMuqz56OtOcYGlMwSwCYd07g8i4ekzCBqycTfp/0kHS3r/oiUKYScZG6Y49BHlDqUCu0nYB5KsECiGXhPr4AlefLblX0/BulcLCc40qY4nrXlLhnbAeBhpLh43aBwS7Tdrdm0JyH58FwWxes7gL7X/CDUHKp9NB9hiCgVen2jR0naTzfe3cNBa8UQfA3aVZoWzpWfLkBH3av2pjHe9c9EzXEoHJ9VuQSVI5bEHyhzbvJOheVHNzeHaMZAKAOrpHZlqFzVjIA9kuQMKaP9EZDdblPwXrT6hEJyPHlxGUHG09+okT1LI5tmmYsid7AErqni6sBCeAc0R3l19iRZj/ZLBT3HFQChunuaFW+l/1DrPTFWmE028/ZS3I+kH93pRFsdd3F9PaPNoui30z3SOTDhBFU1PkZ47pJk65kL08=
  - secure: M8tFEAGqQPbLMaN8skW24AxMx22hiTb/U8QUge1UQeKiiLRx5BUqI4+UrnWFDrIccnzaJEmRLipasR1dVTZxibKezTA2WGHqk5gy/4N6+iF7W2rwOIlBy0G3+c2Gb02FKbQQXfoWv478n1qJWf0KQXMONoBNWt3rqxiomev0PY3kJwTrjwSIkSNOBSikF6fshuMzMh4BPmaVd9Y0ag8E61Zxh/T7iJb4ucgJkV/yHm4EZK0B2HxJmriYgMztcmmAe32NySOkjP7ty98dfPPFWgBiT9jt38uJdmKaX6dA9YQ9n7uS8rKy+GvyoDxkET9wXH6g0SKG1Ci8j/jJYJNskDQTMj+lKH/M0Y2w5tU5qH1JBq0Xe0UGkeKWmjhBR1UMBuWko6At3nAro5nQpGN4BX/Cnq25L+oa//tJMRk+ozPLD/IAUEx7pp5oFr5jR7+jWuUcqcPaq11vde/lsiGSa1ug5h3W/gCtnFAbV8jVHO/bUNJJNhtBLZi9bpYmmxbTMKb5MgsL29Pylofemxfq8fWdiWPlhZDpqhxy3NBitk1CENNdLez0/+XFEkZGgf3KRe808cc7a+UUvMB4zeMvAMwUTo8AFf4q5qBjzA+b8NseQHdUKjcnQm5y/wkt79Fp6fvecX9GcE/upHaDttDnCyLClDeLT+rOAr8luQKL/ns=
