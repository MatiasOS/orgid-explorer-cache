language: node_js
notifications:
  email: false
cache:
  directories:
  - "$HOME/.npm"
install: case $TRAVIS_BRANCH in greenkeeper*) npm i;; *) npm ci;; esac;
jobs:
  include:
  - stage: test
    script:
    - npm run lint
    - npm run resolve-swagger-references
    - npm test
    - npm run coverage
  - stage: NPM develop release
    if: branch = develop
    script:
    - npm run resolve-swagger-references
    - npm version preminor --preid="$TRAVIS_COMMIT" --force
    deploy:
      provider: npm
      email: devops@windingtree.com
      skip_cleanup: true
      tag: develop
      api_key: "$NPM_TOKEN"
      on:
        repo: windingtree/orgid-explorer-cache
        branch: develop
  - stage: Build and publish docker image
    sudo: true
    services:
    - docker
    if: tag IS present
    script:
    - npm run resolve-swagger-references
    - docker build -t windingtree/orgid-explorer-cache :$TRAVIS_BRANCH .
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
    - docker push windingtree/orgid-explorer-cache :$TRAVIS_BRANCH
    - docker tag windingtree/orgid-explorer-cache :$TRAVIS_BRANCH windingtree/orgid-explorer-cache :latest
    - docker push windingtree/orgid-explorer-cache :latest
  - stage: NPM release
    if: tag IS present
    script:
    - npm run resolve-swagger-references
    - echo 'Deploying to NPM...'
    deploy:
      provider: npm
      email: devops@windingtree.com
      skip_cleanup: true
      api_key: "$NPM_TOKEN"
      on:
        repo: windingtree/orgid-explorer-cache
        tags: true
  - stage: Start service from docker with latest merged tag
    install: true
    sudo: true
    if: branch = release/production
    script:
    - pip install --user awscli
    - export PATH=$PATH:$HOME/.local/bin
    - WT_CONFIG=prod npm run deploy-aws-production
env:
  global:
  - secure: TxUF3MCgZYYJGNucEtGkoJ1HWRBwj6vQRH8URk1+F3q3B4nuBplrHUyEiGlUp+jzQtakC/1Vbg6wNWnOBAAODjSzI0ijA21X3Y/HL5XTAw9W49xXp6tbq9MU1SKdVFniAJOSeDcMIUv9fMPfVyY254tHqmt0isW8LkkO6x96O2XwkGouJaFQlVzVxDtshxm2s+qwkKRMSRjLMeBpy6wRFKYX8f3wqMN5yGhKGm/uISzq05OoPE17T7t7gyPdQxes4E0IOiFogpwU1nOuQ6XJT530STda1ZhsnzA86pzrt3n7BhXFodINQqUy7AFRsoz8rAmOvwxLuXgQcrgjrD46EPWTC28hVSM/Y3wg423+X8vn25MFdSbD/lMna96ogNds9PAk5snn44houoTUnqu8iMRnMtI70abOzm+WwWtxqIhG1JbNI4nh/xfUjb4+bliyxDjH+x5u6tus7y+PmOQKbmgqFq23z0n31u5gxvUs35/R+8R1cgI8xNY9+Im5/sghKszS1rUdIx5FHg7FJ00pMZE/V1UmsHMxZ8bxPLcrG6o4dq4msqmJG+83ey+OuRwEdP0KNpNjLBGw+2UQoQoAqSaWNJNY0PcwJ7NEzVYgHsdiTv5jyJCgbs0vlXzMV1NqLVAzVWFy3LhITHg1SM4SdSn9WUyqdsxXWUcTXcVvpFA=
